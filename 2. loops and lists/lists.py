# создать динамический массив из случайных чисел в диапазоне от -10 до 30. Написать программу,
# определяющую сумму элементов массива, находящихся в массиве после первого отрицательного элемента.

import random

size = 10
numbers = [random.randint(-10, 30) for _ in range(size)]  # заполнение массива

# поиск индекса первого отрицательного элемента
# в цикле for i, num in enumerate(numbers): используется функция enumerate(), которая предоставляет индекс и значение каждого элемента в итерируемом объекте numbers
# когда мы пишем for i, num in enumerate(numbers):, переменная i будет содержать индекс текущего элемента, а переменная num будет содержать значение этого элемента. так можно одновременно получить и индекс, и значение элемента, без необходимости явно обращаться к индексам через оператор индексации numbers[i]
# если написать просто for i, num in numbers:, то Python ожидает, что numbers является итерируемым объектом, элементы которого можно распаковать в кортежи (i, num). но numbers является списком целых чисел, и такое присваивание не будет работать
negative_index = -1
for i, num in enumerate(numbers):
    if num < 0:
        negative_index = i
        break

# вычисление суммы элементов после первого отрицательного элемента
sum_after_negative = sum(numbers[negative_index + 1 :])

print("массив:", numbers)
print("cумма элементов после первого отрицательного элемента:", sum_after_negative)

############################################################################################################

# Ввести массив из 10 вещественных чисел. Определить, сколько элементов массива не имеют дробной части.

numbers = [round(random.uniform(0, 100), 1) for _ in range(size)]  # заполнение массива

# подсчёт элементов без дробной части
count = 0  # счётчик элементов без дробной части
for num in numbers:
    if num.is_integer():
        count += 1

print("массив:", numbers)
print("количество элементов без дробной части:", count)

############################################################################################################

# с остальными заданиями тоже всё понятно :)